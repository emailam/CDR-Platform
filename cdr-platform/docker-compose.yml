version: '3'

services:
  # PostgreSQL for MS-Loader
  postgres:
    image: postgres:latest
    container_name: cdr-postgres
    environment:
      POSTGRES_DB: cdr_loader
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - cdr-network

  # MySQL for MS-Backend
  mysql:
    image: mysql:8.0
    container_name: cdr-mysql
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_DATABASE: cdr_backend
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - cdr-network

  # Zookeeper (required for Kafka)
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: cdr-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - cdr-network

  # Kafka message broker
  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: cdr-kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - cdr-network

  # MS-Loader Application
  ms-loader:
    build:
      context: ./ms-loader
      dockerfile: Dockerfile
    container_name: ms-loader
    depends_on:
      - postgres
      - kafka
    ports:
      - "8082:8082"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/cdr_loader
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: admin
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
      APP_CDR_SOURCE_DIRECTORY: /app/data/incoming
      APP_CDR_PROCESSED_DIRECTORY: /app/data/processed
      APP_CDR_FAILED_DIRECTORY: /app/data/failed
      APP_KAFKA_CDR_TOPIC: cdr
    volumes:
      - ./ms-loader/data:/app/data
    networks:
      - cdr-network

  # MS-Backend Application
  ms-backend:
    build:
      context: ./ms-backend
      dockerfile: Dockerfile
    container_name: ms-backend
    depends_on:
      - mysql
      - kafka
    ports:
      - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/cdr_backend?createDatabaseIfNotExist=true
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - cdr-network

networks:
  cdr-network:
    driver: bridge

volumes:
  postgres_data:
  mysql_data:
